{"version":3,"sources":["../../src/ui/loadingScreen.jsx"],"names":["LoadingScreen","elapsedSeconds","finished","data","promise","props","then","setState","catch","log","interval","setInterval","_incrementElapsedSeconds","clearInterval","state","maxDots","numberOfDots","numberOfSpaces","dots","repeat","spaces","children","React","cloneElement","loadingText","_getLoadingText","width","length","prevState","Component","propTypes","PropTypes","object","isRequired"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;IAEaA,a;;;;;;;;;;;;;;;;;;oFACH;AACNC,MAAAA,cAAc,EAAE,CADV;AAENC,MAAAA,QAAQ,EAAE,KAFJ;AAGNC,MAAAA,IAAI,EAAE;AAHA,K;;uFAMG,I;;;;;;;wCAES;AAAA;;AAAA,UAEhBC,OAFgB,GAGd,KAAKC,KAHS,CAEhBD,OAFgB;AAKlBA,MAAAA,OAAO,CAACE,IAAR,CAAa,UAAAH,IAAI;AAAA,eAAI,MAAI,CAACI,QAAL,CAAc;AAAEL,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,IAAI,EAAJA;AAAlB,SAAd,CAAJ;AAAA,OAAjB,EAA8DK,KAA9D,CAAoEC,QAApE;AAEA,WAAKC,QAAL,GAAgBC,WAAW,CAAC,YAAM;AAChC,QAAA,MAAI,CAACJ,QAAL,CAAcP,aAAa,CAACY,wBAA5B;AACD,OAF0B,EAExB,IAFwB,CAA3B;AAGD;;;2CAEsB;AACrBC,MAAAA,aAAa,CAAC,KAAKH,QAAN,CAAb;AACD;;;sCAMiB;AAAA,UAEdT,cAFc,GAGZ,KAAKa,KAHO,CAEdb,cAFc;AAKhB,UAAMc,OAAO,GAAG,CAAhB;AACA,UAAMC,YAAY,GAAGf,cAAc,IAAIc,OAAO,GAAG,CAAd,CAAnC;AACA,UAAME,cAAc,GAAGF,OAAO,GAAGC,YAAjC;AACA,UAAME,IAAI,GAAG,IAAIC,MAAJ,CAAWH,YAAX,CAAb;AACA,UAAMI,MAAM,GAAG,IAAID,MAAJ,CAAWF,cAAX,CAAf;AACA,8BAAiBC,IAAjB,SAAwBE,MAAxB,eAAmCnB,cAAnC;AACD;;;6BAEQ;AAAA,UAELoB,QAFK,GAGH,KAAKhB,KAHF,CAELgB,QAFK;AAAA,wBAQH,KAAKP,KARF;AAAA,UAMLZ,QANK,eAMLA,QANK;AAAA,UAOLC,IAPK,eAOLA,IAPK;;AAUP,UAAID,QAAQ,KAAK,IAAjB,EAAuB;AACrB,eAAOoB,eAAMC,YAAN,CAAmBF,QAAnB,EAA6B;AAAElB,UAAAA,IAAI,EAAJA;AAAF,SAA7B,CAAP;AACD;;AAED,UAAMqB,WAAW,GAAG,KAAKC,eAAL,EAApB;;AACA,UAAMC,KAAK,GAAGF,WAAW,CAACG,MAA1B;AAEA,aACE;AAAK,QAAA,GAAG,EAAC,QAAT;AACK,QAAA,IAAI,EAAC,QADV;AAEK,QAAA,KAAK,EAAED,KAFZ;AAGK,QAAA,MAAM,EAAC;AAHZ,SAIGF,WAJH,CADF;AAQD;;;6CA1C+BI,S,EAAW;AACzC,aAAO;AAAE3B,QAAAA,cAAc,EAAE2B,SAAS,CAAC3B,cAAV,GAA2B;AAA7C,OAAP;AACD;;;;EA3BgCqB,eAAMO,S;;;AAsEzC7B,aAAa,CAAC8B,SAAd,GAA0B;AACxB1B,EAAAA,OAAO,EAAE2B,mBAAUC,MAAV,CAAiBC;AADF,CAA1B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { log } from '../log';\n\nexport class LoadingScreen extends React.Component {\n  state = {\n    elapsedSeconds: 0,\n    finished: false,\n    data: null,\n  };\n\n  interval = null;\n\n  componentDidMount() {\n    const {\n      promise,\n    } = this.props;\n\n    promise.then(data => this.setState({ finished: true, data })).catch(log);\n\n    this.interval = setInterval(() => {\n      this.setState(LoadingScreen._incrementElapsedSeconds);\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  static _incrementElapsedSeconds(prevState) {\n    return { elapsedSeconds: prevState.elapsedSeconds + 1 };\n  }\n\n  _getLoadingText() {\n    const {\n      elapsedSeconds,\n    } = this.state;\n\n    const maxDots = 3;\n    const numberOfDots = elapsedSeconds % (maxDots + 1);\n    const numberOfSpaces = maxDots - numberOfDots;\n    const dots = '.'.repeat(numberOfDots);\n    const spaces = ' '.repeat(numberOfSpaces);\n    return `Loading${dots}${spaces} (${elapsedSeconds}s)`;\n  }\n\n  render() {\n    const {\n      children,\n    } = this.props;\n\n    const {\n      finished,\n      data,\n    } = this.state;\n\n    if (finished === true) {\n      return React.cloneElement(children, { data });\n    }\n\n    const loadingText = this._getLoadingText();\n    const width = loadingText.length;\n\n    return (\n      <box top=\"center\"\n           left=\"center\"\n           width={width}\n           height=\"50\">\n        {loadingText}\n      </box>\n    );\n  }\n}\n\nLoadingScreen.propTypes = {\n  promise: PropTypes.object.isRequired,\n}\n\n"],"file":"loadingScreen.js"}