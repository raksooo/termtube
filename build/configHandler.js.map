{"version":3,"sources":["../src/configHandler.js"],"names":["readFileAsync","readFile","writeFileAsync","writeFile","parseXml","parseString","CONFIG_NAME","CONFIG_PATH","path","join","os","homedir","CONFIG_KEY_PLAYER","CONFIG_KEY_SUBSCRIPTIONS","CONFIG_KEY_MOST_RECENT","getSubscriptions","readConfig","then","config","registerSubscriptions","filePath","parseSubscriptions","saveSubscriptions","xml","o","opml","body","outline","list","map","item","$","xmlUrl","subscriptions","editConfig","subscriptionsExist","length","saveVideoPlayer","player","getVideoPlayer","patch","Object","assign","newConfig","writeConfig","json","JSON","stringify","parse","toString","catch","getMostRecent","mostRecent","Date","trySetMostRecent","date"],"mappings":"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","sourcesContent":["import os from 'os';\nimport path from 'path';\nimport { readFile, writeFile } from 'fs';\nimport { parseString } from 'xml2js';\nimport { promisify } from 'util';\nimport { log } from './log';\n\nconst readFileAsync = promisify(readFile);\nconst writeFileAsync = promisify(writeFile);\nconst parseXml = promisify(parseString);\n\nconst CONFIG_NAME = 'termtube';\nconst CONFIG_PATH = path.join(os.homedir(), '.config', CONFIG_NAME);\n\nconst CONFIG_KEY_PLAYER = \"player\";\nconst CONFIG_KEY_SUBSCRIPTIONS = \"subscriptions\";\nconst CONFIG_KEY_MOST_RECENT = \"mostRecent\";\n\nexport const getSubscriptions = () => {\n  return readConfig()\n    .then(config => config[CONFIG_KEY_SUBSCRIPTIONS]);\n};\n\nexport const registerSubscriptions = filePath => {\n  return readFileAsync(filePath)\n    .then(parseSubscriptions)\n    .then(saveSubscriptions);\n};\n\nconst parseSubscriptions = xml => {\n  return parseXml(xml)\n    .then(o => {\n      return o.opml.body[0].outline[0].outline;\n    })\n    .then(list => list.map(item => item.$.xmlUrl));\n};\n\nconst saveSubscriptions = subscriptions => {\n  return editConfig({ subscriptions });\n};\n\nexport const subscriptionsExist = () => {\n  return readConfig()\n    .then(config => config[CONFIG_KEY_SUBSCRIPTIONS] != null\n      && config[CONFIG_KEY_SUBSCRIPTIONS].length > 0);\n};\n\nexport const saveVideoPlayer = player => {\n  return editConfig({ player });\n};\n\nexport const getVideoPlayer = () => {\n  return readConfig()\n    .then(config => config[CONFIG_KEY_PLAYER] || 'mpv');\n};\n\nconst editConfig = patch => {\n  return readConfig()\n    .then(config => Object.assign(config, patch))\n    .then(newConfig => writeConfig(newConfig));\n};\n\nconst writeConfig = newConfig => {\n  const json = JSON.stringify(newConfig);\n  return writeFileAsync(CONFIG_PATH, json);\n};\n\nconst readConfig = () => {\n  return readFileAsync(CONFIG_PATH)\n    .then(config => JSON.parse(config.toString()))\n    .catch(() => ({}));\n};\n\nexport const getMostRecent = () => {\n  return readConfig()\n    .then(config => config[CONFIG_KEY_MOST_RECENT])\n    .then(mostRecent => mostRecent && new Date(mostRecent));\n}\n\nexport const trySetMostRecent = date => {\n  return getMostRecent()\n    .then(mostRecent => (mostRecent == null || date > mostRecent) && editConfig({ mostRecent: date }));\n}\n\n"],"file":"configHandler.js"}